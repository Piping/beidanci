#!/bin/bash

SCRIPTDIR=$(dirname "$0")

bs() {
    # use llvm ld to speed up compliation
    sudo apt install lld
    # aid dev reload
    sudo apt install entr python3-pip && pip3 install livereload
    # for smtp mail library
    sudo apt install pkg-config libssl-dev
    # install benchtool
    sudo apt install apache2-utils curl
    sudo apt install libsqlite3-dev build-essential
    sudo apt install postgresql-12 libpq-dev
    # on u18
    # https://www.postgresql.org/download/linux/ubuntu/
    # https://computingforgeeks.com/install-postgresql-12-on-ubuntu/
    # wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    # echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" |sudo tee  /etc/apt/sources.list.d/pgdg.list

    # install rust toolchains
    # curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    cargo install diesel_cli --no-default-features --features sqlite,postgres
    cargo install diesel_cli_ext # autogenerated struct for sql queries

    git submodule update --init --recursive
    # vendor the sources and apply patches
    cargo vendor submodule/deps/vendor/
    # git apply submodule/deps/patch/
}

livereload() {
    python3 - <<EOF
from livereload import Server
import time
import subprocess
def reload_when_ready():
    command=['cargo', 'build']
    return_code = subprocess.call(command)
    while return_code!= 0:
        time.sleep(3)
        return_code = subprocess.call(command)
server = Server()
server.watch('src/*', reload_when_ready)
server.serve(open_url="127.0.0.10", open_url_delay=2, host='127.0.0.10', port='35729')
EOF
}

run() {
    livereload &
    find . -name '*.rs' -or -name '*.toml' | entr -c -r env ROCKET_ENV=stage cargo run
}

db() {
    # export DATABASE_URL=$(pwd)/sql.db
    export DATABASE_URL=postgres://postgres:password@localhost/ratemymanagers
    diesel setup
    # diesel migration generate create_managers
    # diesel migration run
    # diesel migration redo
    # sudo -u postgres psql -d postgres -f migrations/2020-12-01-001126_create_managers/data.sql
    # sudo -u postgres pg_dump --table=managers --data-only --column-inserts postgres > data.sql
    # additionally, diesel migration can run data.sql by include them in the up/down.sql
}

bench() {
    ab -p bench.data -T 'application/x-www-form-urlencoded' -c 100 -n 1000 http://127.0.0.10:8000/api/add_manager
}

vendor() {
    cargo vendor submodule/deps/vendor
    cargo build --release
}

"$@"
